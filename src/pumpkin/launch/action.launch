<launch>
	<arg name="visual" value="false" />

	<arg name="robot_description" value="robot_description" />
	<arg name="robot_urdf_file" value="$(find pumpkin_description)/robots/pumpkin_description.URDF"/>
	<arg name="robot_srdf_file" value="$(find pumpkin_moveit)/config/pumpkin_description.srdf"/>

	<param name="$(arg robot_description)" textfile="$(arg robot_urdf_file)"/>
	<param name="$(arg robot_description)_semantic" textfile="$(arg robot_srdf_file)" />

	<rosparam param="source_list">["playback_joint_states"]</rosparam>

	<param name="/pumpkin/description_file" value="$(arg robot_urdf_file)"/>
	<param name="/pumpkin/description_srdf" value="$(arg robot_srdf_file)"/>

	<group ns="$(arg robot_description)_planning">
		<rosparam command="load" file="$(find pumpkin_moveit)/config/joint_limits.yaml"/>
	</group>

	<group ns="$(arg robot_description)_kinematics">
		<rosparam command="load" file="$(find pumpkin_moveit)/config/kinematics.yaml"/>
	</group>

	<node name="load_config" pkg="pumpkin" type="load_config" />
	<node name="playback_action" pkg="pumpkin" type="playback_action" />
	<node name="recorder" pkg="pumpkin" type="recorder" />

	<param name="/use_gui" value="$(arg visual)"/>

	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

	<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

	<include file="$(find pumpkin)/launch/ompl_planning.launch" />

	<node name="planner" pkg="pumpkin" type="planner" output="screen">
		<rosparam command="load" file="$(find pumpkin_moveit)/config/kinematics.yaml"/>
	</node>

	<node if="$(arg visual)" name="rviz" pkg="rviz" type="rviz" args="-d $(find pumpkin)/urdf.rviz" />

</launch>
